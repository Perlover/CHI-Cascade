NEXT (0.26)
    *) New conception of non-blocking run method - deferring
    *) The test 04_memcached_multi.t some fails in FreeBSD. May be this is
       because 'sleep' works not as expected. I changed the 'sleep' to
       'select($,$,$,$)'. May be it will improve this test at FreeBSD...
    +) Added CHI::Cascade::Rule::value_expires method for changing by recompute
       code the expiration time of values & target markers (no docs yet)
    +) Added test for value_expires - test_05.pm by 08_fast_mmap.t
    *) Fixed bugs - in tests *_fast_mmap.t if was ^C signal - files of FastMmap
       driver were not deleted
    *) The new method CHI::Cascade::Value->state (no docs yet)
    +) Added method CHI::Cascade::Value::state_as_str (no docs yet)
    *) The test '07_fast_mmap.t' tests now deferring & states of values
    *) Fix few bug with target locking

0.25001
    *) Few fix - should improve tests

0.25
    +) Some improvements
    *) For backward compatibility with perl < 5.9 the operator '$a // $b' is
       changed to long style as 'defined($a) ? $a : $b'. It should improve a
       tests on old perl installations

0.24_01
    +) Added 'parent' module in requires for old perl installation (<=5.10.0)

0.24 (stable)
    *) Fixed bug with tests with memcached

0.23
    +) Queues for non blocking running - to see test t/lib/test_04.pm
       (no docs yet)
    +) Added test '07_fast_mmap.t' for queue-ing
    *) Fix some bugs
    +) Added bits for values (no docs yet) and not finished yet.

0.22
    +) Added the option 'target_chi' - target markers can be kept in other CHI
       cache than data of targets. It's useful for l1_cache's caches of CHI

0.21
    *) A detection of circle dependencies is improved (not tested)

0.20
    +) Some optimization
    *) Few fixes of documentation
    +) Added option 'depends_catch' to rule as catcher callback for dependencies

0.19
    *) Fixed bug of die like "Can't call method "is_value" on an undefined value
       at /usr/local/share/perl5/CHI/Cascade.pm line 190"

0.18
    +) Now if recompute function dies with exception of CHI::Cascade::Value type
       (introduced in v.0.13) CHI::Cascade::run method will return old value of
       target value from cache if exception's value is 'undef' and cache value
       exists. Before the run method always returned a value of exception.
    +) Imroved the documentation for CHI::Cascade::rule/code
    +) Added the documentation of CHI::Cascade::Value

0.17 (stable)
    1) Added a callback function in rule as 'recomputed'

0.16
    1) Changed API for coderef's subroutines in 'depends' of rules. Now first
       parameter is reference to CHI::Cascade::Rule object and other are
       'qr_params'
    2) CHI::Cascade::Rule object now has a method 'cascade' which returns a
       CHI::Cascade instance for this rule. You can use it in 'depends'
       subroutines

0.15
    1) Corrections if cascade rules have a 'depends' option as coderef. Backward
       compatible. Now coderef can return arrayref of dependencies. Before it
       could return only one dependence as plain text. No tests yet for this
    2) Tests are rewritten and optimised
    3) Added a FastMmap driver's tests
    4) Added tests when dependencies are coderef (t/lib/test_02.pm)

0.14 (stable)
    1) Improved tests in accordance with reports version 0.13
    2) Fixed few misprints in Changes & TODO files

0.13 (stable)
    1) Fix bug - sometimes generated warnging for trigger time (was undefined)
    2) Now a compute code can throw die with CHI::Cascade::Value object - this value
       will be returned from run method but value will not be saved in cache as
       computed value
    3) Improved a behavior with some buggy situations with cache (cache doesn't
       save a value by some reasons for example)

0.12
    - More stable version as i think ;-) Please use it
    - Improved signal handling in tests (for memcached killing)
    - Fixed bug - dependencies as sub {} didn't get a qr_params properly
    - Fixed rule's bug

0.11
    - Fixed bug (sometime dead locks were after target locking)
    - Added 'busy_lock' option in contructor and to 'rule' method
    - All 'set's in cache executed with expire as 'never' (excluding locking of
      targets)

0.1
    - Changed API of execution 'code' of rules
    - Now you can use instances of CHI::Cascade::Rule in your target codes
    - Now you can pass any parameters to target codes described in rules

0.05
    - More improved the test t/03_memcached_multi.t
    - Tests with memcached for root user are not started (passed)
      Now they are started
    - More ready distributive

0.03
    - Fixed bugs in tests (for example not be stopped memcached)
    - New test - multi-process reading/getting from memcached (with forks)
    - Added documentation about constructor and methods.

0.02
    - Added repo meta info of github.com repository
    - few changes of Makefile.PL ('README' file is generated by auto)
    - Added 'Changes' file ;-)
    - Added TODO file

0.01
    - First release
